function initializeAudioVisualization() {
    let audioContext, analyser, canvas, canvasContext, animationId;

    function setupVisualizer() {
        canvas = document.getElementById('waveformCanvas');
        canvasContext = canvas.getContext('2d');

        analyser = audioContext.createAnalyser();
        analyser.fftSize = 2048;  // Размер FFT

        const bufferLength = analyser.fftSize;
        const dataArray = new Uint8Array(bufferLength);

        // Функция отрисовки волны
        function draw() {
            animationId = requestAnimationFrame(draw);
            analyser.getByteTimeDomainData(dataArray);

            canvasContext.clearRect(0, 0, canvas.width, canvas.height);

            canvasContext.lineWidth = 2;
            canvasContext.strokeStyle = '#007bff';

            canvasContext.beginPath();

            const sliceWidth = canvas.width * 1.0 / bufferLength;
            let x = 0;

            for (let i = 0; i < bufferLength; i++) {
                const v = dataArray[i] / 128.0;
                const y = v * canvas.height / 2;

                if (i === 0) {
                    canvasContext.moveTo(x, y);
                } else {
                    canvasContext.lineTo(x, y);
                }

                x += sliceWidth;
            }

            canvasContext.lineTo(canvas.width, canvas.height / 2);
            canvasContext.stroke();
        }

        draw();
    }

    return {
        start: async function() {
            try {
                audioContext = new (window.AudioContext || window.webkitAudioContext)();

                const mediaStream = await navigator.mediaDevices.getUserMedia({ audio: true });
                const input = audioContext.createMediaStreamSource(mediaStream);

                input.connect(analyser);  // Подключаем к анализатору
                setupVisualizer();  // Запускаем визуализацию
            } catch (error) {
                console.error('Ошибка при инициализации визуализации:', error);
            }
        },

        stop: function() {
            cancelAnimationFrame(animationId);  // Остановить отрисовку
            audioContext && audioContext.close();  // Останавливаем AudioContext
        }
    };
}
